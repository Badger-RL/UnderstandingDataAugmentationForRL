# Tuned
MountainCarContinuous-v0:
  n_timesteps: 300000
  policy: 'MlpPolicy'
  noise_type: 'ornstein-uhlenbeck'
  noise_std: 0.5

Pendulum-v1:
  n_timesteps: 20000
  policy: 'MlpPolicy'
  gamma: 0.98
  buffer_size: 200000
  learning_starts: 10000
  noise_type: 'normal'
  noise_std: 0.1
  gradient_steps: -1
#  train_freq: [1, "episode"]
  learning_rate: !!float 1e-3
  policy_kwargs: "dict(net_arch=[400, 300])"

LunarLanderContinuous-v2:
  n_timesteps: !!float 3e5
  policy: 'MlpPolicy'
  gamma: 0.98
  buffer_size: 200000
  learning_starts: 10000
  noise_type: 'normal'
  noise_std: 0.1
  gradient_steps: -1
#  train_freq: [1, "episode"]
  learning_rate: !!float 1e-3
  policy_kwargs: "dict(net_arch=[400, 300])"

BipedalWalker-v3:
  n_timesteps: !!float 1e6
  policy: 'MlpPolicy'
  gamma: 0.98
  buffer_size: 200000
  learning_starts: 10000
  noise_type: 'normal'
  noise_std: 0.1
  gradient_steps: -1
#  train_freq: [1, "episode"]
  learning_rate: !!float 1e-3
  policy_kwargs: "dict(net_arch=[400, 300])"

# To be tuned
BipedalWalkerHardcore-v3:
  n_timesteps: !!float 1e7
  policy: 'MlpPolicy'
  gamma: 0.98
  buffer_size: 200000
  learning_starts: 10000
  noise_type: 'normal'
  noise_std: 0.1
  gradient_steps: -1
#  train_freq: [1, "episode"]
  learning_rate: !!float 1e-3
  policy_kwargs: "dict(net_arch=[400, 300])"

# Tuned
HalfCheetahBulletEnv-v0: &pybullet-defaults
  n_timesteps: !!float 1e6
  policy: 'MlpPolicy'
  gamma: 0.98
  buffer_size: 200000
  learning_starts: 10000
  noise_type: 'normal'
  noise_std: 0.1
  gradient_steps: 1
  train_freq: 1
  learning_rate: !!float 1e-3
  policy_kwargs: "dict(net_arch=[400, 300])"

# Tuned
AntBulletEnv-v0:
  <<: *pybullet-defaults
  learning_rate: !!float 7e-4
  policy_kwargs: "dict(net_arch=[400, 300])"

# Tuned
HopperBulletEnv-v0:
  <<: *pybullet-defaults
  train_freq: 64
  gradient_steps: 64
  batch_size: 256
  learning_rate: !!float 7e-4

# Tuned
Walker2DBulletEnv-v0:
  <<: *pybullet-defaults
  batch_size: 256
  learning_rate: !!float 7e-4

# TO BE tested
HumanoidBulletEnv-v0:
  n_timesteps: !!float 2e6
  policy: 'MlpPolicy'
  gamma: 0.98
  buffer_size: 200000
  learning_starts: 10000
  noise_type: 'normal'
  noise_std: 0.1
  gradient_steps: -1
#  train_freq: [1, "episode"]
  learning_rate: !!float 1e-3
  policy_kwargs: "dict(net_arch=[400, 300])"

# Tuned
ReacherBulletEnv-v0:
  <<: *pybullet-defaults
  n_timesteps: !!float 3e5


# To be tuned
InvertedDoublePendulumBulletEnv-v0:
  <<: *pybullet-defaults
  n_timesteps: !!float 1e6

# To be tuned
InvertedPendulumSwingupBulletEnv-v0:
  <<: *pybullet-defaults
  n_timesteps: !!float 3e5

# === Mujoco Envs ===

InvertedPendulum-v2:
  n_timesteps: !!float 1e6
  policy: 'MlpPolicy'
  gamma: 0.98
  buffer_size: 200000
  learning_starts: 10000
  noise_type: 'normal'
  noise_std: 0.1
  gradient_steps: -1
  train_freq: 256
  learning_rate: !!float 1e-4
  policy_kwargs: "dict(net_arch=[64, 64])"

InvertedDoublePendulum-v2:
  n_timesteps: !!float 1e6
  policy: 'MlpPolicy'
  gamma: 0.98
  buffer_size: 200000
  learning_starts: 10000
  noise_type: 'normal'
  noise_std: 0.1
  gradient_steps: -1
  train_freq: 256
  learning_rate: !!float 1e-4
  policy_kwargs: "dict(net_arch=[64, 64])"

HalfCheetah-v3: &mujoco-defaults
  n_timesteps: !!float 1e6
  policy: 'MlpPolicy'
  learning_starts: 10000
  noise_type: 'normal'
  noise_std: 0.1

Ant-v3:
  <<: *mujoco-defaults

Hopper-v3:
  <<: *mujoco-defaults

Walker2d-v3:
  <<: *mujoco-defaults

Humanoid-v3:
  <<: *mujoco-defaults
  n_timesteps: !!float 1e6
  # SAC Hyperparams
  train_freq: 1
  gradient_steps: 1
  learning_rate: !!float 3e-4
  batch_size: 256

Swimmer-v3:
  <<: *mujoco-defaults
  gamma: 0.9999
  train_freq: 1
  gradient_steps: 1
  learning_rate: !!float 1e-4

### Custom Reacher

Reacher4-v3: &reacher-defaults
  n_timesteps: !!float 1e6
  policy: 'MlpPolicy'
  learning_rate: !!float 1e-3
  learning_starts: 10000
  buffer_size: !!float 1e6
  noise_type: 'normal'
  noise_std: 0.1

Reacher8-v3:
  <<: *reacher-defaults

Reacher12-v3:
  <<: *reacher-defaults

Reacher16-v3:
  <<: *reacher-defaults

Reacher20-v3:
  <<: *reacher-defaults

LQR-v0:
  <<: *mujoco-defaults
  learning_starts: 10000

LQRGoal-v0:
  <<: *mujoco-defaults
  learning_starts: 10000
  learning_rate: !!float 1e-3
#  noise_type: 'ornstein-uhlenbeck'
#  noise_std: 0.5

Swimmer10-v3: &swimmer-defaults
  n_timesteps: !!float 1e6
  policy: 'MlpPolicy'
  gamma: 0.98
  buffer_size: 100000
  noise_type: 'ornstein-uhlenbeck'
  noise_std: 0.2
  learning_starts: 10000
  batch_size: 64
  learning_rate: !!float 1e-4
  train_freq: 16
  gradient_steps: 16
  policy_kwargs: "dict(net_arch=[256, 256])"

Swimmer20-v3:
  <<: *swimmer-defaults

CartPole-v1:
  n_timesteps: !!float 1e6
  policy: 'MlpPolicy'
  gamma: 0.99
  buffer_size: 200000
  learning_starts: 10000
  batch_size: 128
  noise_type: 'normal'
  noise_std: 0.3
  gradient_steps: 128
  train_freq: 256
  learning_rate: !!float 1e-3
  policy_kwargs: "dict(net_arch=[400,300])"

PredatorPrey-v0: &predator_prey
  n_timesteps: !!float 1e6
  policy: 'MlpPolicy'
  gamma: 0.99
  buffer_size: 1000000
  learning_starts: 10000
  batch_size: 128
  noise_type: 'normal'
  noise_std: 0.1
  gradient_steps: 32
  train_freq: 64
  learning_rate: !!float 1e-3
  policy_kwargs: "dict(net_arch=[64,64])"

PredatorPreyBox-v0:
  <<: *predator_prey

PredatorPreyDense-v0:
  <<: *predator_prey

PredatorPreyBoxDense-v0:
  <<: *predator_prey

FetchPickAndPlace-v1:
  n_timesteps: !!float 1e6
  policy: 'MultiInputPolicy'
  gamma: 0.99
  buffer_size: 1000000
  learning_starts: 10000
  batch_size: 256
  noise_type: 'normal'
  noise_std: 0.1
  gradient_steps: 1
  train_freq: 1
  learning_rate: !!float 1e-3
  policy_kwargs: "dict(net_arch=[256,256])"

FetchSlide-v1:
  n_timesteps: !!float 1e6
  policy: 'MultiInputPolicy'
  gamma: 0.99
  buffer_size: 1000000
  learning_starts: 10000
  batch_size: 256
  noise_type: 'normal'
  noise_std: 0.1
  gradient_steps: 1
  train_freq: 1
  learning_rate: !!float 1e-3
  policy_kwargs: "dict(net_arch=[256,256])"

FetchReach-v1:
  n_timesteps: !!float 1e6
  policy: 'MultiInputPolicy'
  gamma: 0.99
  buffer_size: 1000000
  learning_starts: 10000
  batch_size: 256
  noise_type: 'normal'
  noise_std: 0.1
  gradient_steps: 1
  train_freq: 1
  learning_rate: !!float 1e-3
  policy_kwargs: "dict(net_arch=[256,256])"

FetchPush-v1:
  n_timesteps: !!float 1e6
  policy: 'MultiInputPolicy'
  gamma: 0.99
  buffer_size: 1000000
  learning_starts: 10000
  batch_size: 256
  noise_type: 'normal'
  noise_std: 0.1
  gradient_steps: 1
  train_freq: 1
  learning_rate: !!float 1e-3
  policy_kwargs: "dict(net_arch=[256,256])"
